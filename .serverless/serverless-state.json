{
  "service": {
    "service": "cylee-service",
    "serviceObject": {
      "name": "cylee-service"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "stage": "dev",
      "region": "ap-northeast-2",
      "role": "arn:aws:iam::230175665354:role/serverless-dev-ap-northeast-2-lambdaRole",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            },
            "DependsOn": []
          },
          "ColdLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cylee-service-dev-cold"
            },
            "DependsOn": []
          },
          "WarmLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cylee-service-dev-warm"
            },
            "DependsOn": []
          },
          "WarmUpPluginWarmerName1LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cylee-service-dev-warmup-plugin-warmerName1"
            },
            "DependsOn": []
          },
          "WarmUpPluginWarmerName2LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cylee-service-dev-warmup-plugin-warmerName2"
            },
            "DependsOn": []
          },
          "ColdLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cylee-service/dev/1632410916583-2021-09-23T15:28:36.583Z/cylee-service.zip"
              },
              "Handler": "./functions/coldFunctions/handler.cold",
              "Runtime": "nodejs14.x",
              "FunctionName": "cylee-service-dev-cold",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::230175665354:role/serverless-dev-ap-northeast-2-lambdaRole"
            },
            "DependsOn": [
              "ColdLogGroup"
            ]
          },
          "WarmLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cylee-service/dev/1632410916583-2021-09-23T15:28:36.583Z/cylee-service.zip"
              },
              "Handler": "./functions/warmFunctions/handler.warm",
              "Runtime": "nodejs14.x",
              "FunctionName": "cylee-service-dev-warm",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::230175665354:role/serverless-dev-ap-northeast-2-lambdaRole"
            },
            "DependsOn": [
              "WarmLogGroup"
            ]
          },
          "WarmUpPluginWarmerName1LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cylee-service/dev/1632410916583-2021-09-23T15:28:36.583Z/cylee-service.zip"
              },
              "Handler": ".warmup/warmerName1/index.warmUp",
              "Runtime": "nodejs14.x",
              "FunctionName": "cylee-service-dev-warmup-plugin-warmerName1",
              "MemorySize": 128,
              "Timeout": 10,
              "Description": "Serverless WarmUp Plugin (warmer \"warmerName1\")",
              "Role": {
                "Fn::GetAtt": [
                  "WarmUpPluginWarmerName1Role",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "WarmUpPluginWarmerName1LogGroup",
              "WarmUpPluginWarmerName1Role"
            ]
          },
          "WarmUpPluginWarmerName2LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cylee-service/dev/1632410916583-2021-09-23T15:28:36.583Z/cylee-service.zip"
              },
              "Handler": ".warmup/warmerName2/index.warmUp",
              "Runtime": "nodejs14.x",
              "FunctionName": "cylee-service-dev-warmup-plugin-warmerName2",
              "MemorySize": 128,
              "Timeout": 10,
              "Description": "Serverless WarmUp Plugin (warmer \"warmerName2\")",
              "Role": {
                "Fn::GetAtt": [
                  "WarmUpPluginWarmerName2Role",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "WarmUpPluginWarmerName2LogGroup",
              "WarmUpPluginWarmerName2Role"
            ]
          },
          "WarmUpPluginWarmerName1EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "rate(1 minute)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "WarmUpPluginWarmerName1LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "warmUpPluginWarmerName1Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "WarmUpPluginWarmerName2EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "rate(2 minutes)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "WarmUpPluginWarmerName2LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "warmUpPluginWarmerName2Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "ApiGatewayMethodColdGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceCold"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ColdLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack",
              "PermissionsNestedStack"
            ]
          },
          "ApiGatewayMethodWarmGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceWarm"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "WarmLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                },
                "PassthroughBehavior": "NEVER",
                "RequestTemplates": {
                  "application/json": "{ \"stageVariables\" : { \"SERVERLESS_ALIAS\" : \"dev\" } }",
                  "application/x-www-form-urlencoded": "\n    #define( $body )\n      {\n      #foreach( $token in $input.path('$').split('&') )\n        #set( $keyVal = $token.split('=') )\n        #set( $keyValSize = $keyVal.size() )\n        #if( $keyValSize >= 1 )\n          #set( $key = $util.escapeJavaScript($util.urlDecode($keyVal[0])) )\n          #if( $keyValSize >= 2 )\n            #set($val = $util.escapeJavaScript($util.urlDecode($keyVal[1])).replaceAll(\"\\\\'\",\"'\"))\n          #else\n            #set( $val = '' )\n          #end\n          \"$key\": \"$val\"#if($foreach.hasNext),#end\n        #end\n      #end\n      }\n    #end\n\n    \n  #define( $loop )\n    {\n    #foreach($key in $map.keySet())\n        #set( $k = $util.escapeJavaScript($key) )\n        #set( $v = $util.escapeJavaScript($map.get($key)).replaceAll(\"\\\\'\", \"'\") )\n        \"$k\":\n          \"$v\"\n          #if( $foreach.hasNext ) , #end\n    #end\n    }\n  #end\n\n  {\n    \"body\": $body,\n    \"method\": \"$context.httpMethod\",\n    \"principalId\": \"$context.authorizer.principalId\",\n    \"stage\": \"$context.stage\",\n\n    \"cognitoPoolClaims\" : {\n       \n       \"sub\": \"$context.authorizer.claims.sub\"\n    },\n\n    #set( $map = $context.authorizer )\n    \"enhancedAuthContext\": $loop,\n\n    #set( $map = $input.params().header )\n    \"headers\": $loop,\n\n    #set( $map = $input.params().querystring )\n    \"query\": $loop,\n\n    #set( $map = $input.params().path )\n    \"path\": $loop,\n\n    #set( $map = $context.identity )\n    \"identity\": $loop,\n\n    #set( $map = $stageVariables )\n    \"stageVariables\": $loop,\n\n    \"requestPath\": \"$context.resourcePath\"\n  }\n\n  "
                },
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "SelectionPattern": "",
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  },
                  {
                    "StatusCode": "400",
                    "SelectionPattern": "[\\s\\S]*\\[400\\][\\s\\S]*",
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  },
                  {
                    "StatusCode": "401",
                    "SelectionPattern": "[\\s\\S]*\\[401\\][\\s\\S]*",
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  },
                  {
                    "StatusCode": "403",
                    "SelectionPattern": "[\\s\\S]*\\[403\\][\\s\\S]*",
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  },
                  {
                    "StatusCode": "404",
                    "SelectionPattern": "[\\s\\S]*\\[404\\][\\s\\S]*",
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  },
                  {
                    "StatusCode": "422",
                    "SelectionPattern": "[\\s\\S]*\\[422\\][\\s\\S]*",
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  },
                  {
                    "StatusCode": "500",
                    "SelectionPattern": "[\\s\\S]*(Process\\s?exited\\s?before\\s?completing\\s?request|\\[500\\])[\\s\\S]*",
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  },
                  {
                    "StatusCode": "502",
                    "SelectionPattern": "[\\s\\S]*\\[502\\][\\s\\S]*",
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  },
                  {
                    "StatusCode": "504",
                    "SelectionPattern": "([\\s\\S]*\\[504\\][\\s\\S]*)|(.*Task timed out after \\d+\\.\\d+ seconds$)",
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  }
                ]
              },
              "MethodResponses": [
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": "200"
                },
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": "400"
                },
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": "401"
                },
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": "403"
                },
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": "404"
                },
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": "422"
                },
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": "500"
                },
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": "502"
                },
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": "504"
                }
              ]
            },
            "DependsOn": [
              "APINestedStack",
              "PermissionsNestedStack"
            ]
          },
          "ApiGatewayDeployment1632410905127": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodColdGet",
              "ApiGatewayMethodWarmGet",
              "APINestedStack"
            ]
          },
          "WarmUpPluginWarmerName1Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "cylee-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "warmername1",
                    "role"
                  ]
                ]
              },
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "cylee-service",
                        "dev",
                        "warmer",
                        "warmername1",
                        "policy"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": [
                              "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cylee-service-dev-warmup-plugin-warmerName1:*",
                              {}
                            ]
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": [
                              "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cylee-service-dev-warmup-plugin-warmerName1:*:*",
                              {}
                            ]
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:InvokeFunction"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": [
                              "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:cylee-service-dev-warm",
                              {}
                            ]
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ec2:CreateNetworkInterface",
                          "ec2:DescribeNetworkInterfaces",
                          "ec2:DetachNetworkInterface",
                          "ec2:DeleteNetworkInterface"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            },
            "DependsOn": []
          },
          "WarmUpPluginWarmerName2Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "cylee-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "warmername2",
                    "role"
                  ]
                ]
              },
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "cylee-service",
                        "dev",
                        "warmer",
                        "warmername2",
                        "policy"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": [
                              "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cylee-service-dev-warmup-plugin-warmerName2:*",
                              {}
                            ]
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": [
                              "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cylee-service-dev-warmup-plugin-warmerName2:*:*",
                              {}
                            ]
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:InvokeFunction"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": [
                              "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:cylee-service-dev-warm",
                              {}
                            ]
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ec2:CreateNetworkInterface",
                          "ec2:DescribeNetworkInterfaces",
                          "ec2:DetachNetworkInterface",
                          "ec2:DeleteNetworkInterface"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            },
            "DependsOn": []
          },
          "APINestedStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
              "Parameters": {},
              "TemplateURL": {
                "Fn::Join": [
                  "/",
                  [
                    "https://s3.ap-northeast-2.amazonaws.com",
                    {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "serverless/cylee-service/dev/1632410916583-2021-09-23T15:28:36.583Z",
                    "cloudformation-template-API-nested-stack.json"
                  ]
                ]
              }
            }
          },
          "PermissionsNestedStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
              "Parameters": {
                "WarmUpPluginWarmerName1EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "WarmUpPluginWarmerName1EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "WarmUpPluginWarmerName1LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "WarmUpPluginWarmerName1LambdaFunction",
                    "Arn"
                  ]
                },
                "WarmUpPluginWarmerName2EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "WarmUpPluginWarmerName2EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "WarmUpPluginWarmerName2LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "WarmUpPluginWarmerName2LambdaFunction",
                    "Arn"
                  ]
                },
                "ApiGatewayRestApiParameter": {
                  "Fn::GetAtt": [
                    "APINestedStack",
                    "Outputs.ApiGatewayRestApi"
                  ]
                },
                "ColdLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "ColdLambdaFunction",
                    "Arn"
                  ]
                },
                "WarmLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "WarmLambdaFunction",
                    "Arn"
                  ]
                }
              },
              "TemplateURL": {
                "Fn::Join": [
                  "/",
                  [
                    "https://s3.ap-northeast-2.amazonaws.com",
                    {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "serverless/cylee-service/dev/1632410916583-2021-09-23T15:28:36.583Z",
                    "cloudformation-template-Permissions-nested-stack.json"
                  ]
                ]
              }
            },
            "DependsOn": [
              "WarmUpPluginWarmerName1EventsRuleSchedule1",
              "WarmUpPluginWarmerName1LambdaFunction",
              "WarmUpPluginWarmerName2EventsRuleSchedule1",
              "WarmUpPluginWarmerName2LambdaFunction",
              "APINestedStack",
              "ColdLambdaFunction",
              "WarmLambdaFunction"
            ]
          },
          "PoliciesNestedStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
              "Parameters": {
                "ServerlessDeploymentBucketParameter": {
                  "Ref": "ServerlessDeploymentBucket"
                }
              },
              "TemplateURL": {
                "Fn::Join": [
                  "/",
                  [
                    "https://s3.ap-northeast-2.amazonaws.com",
                    {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "serverless/cylee-service/dev/1632410916583-2021-09-23T15:28:36.583Z",
                    "cloudformation-template-Policies-nested-stack.json"
                  ]
                ]
              }
            },
            "DependsOn": [
              "ServerlessDeploymentBucket"
            ]
          },
          "VersionsNestedStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
              "Parameters": {
                "WarmUpPluginWarmerName1LambdaFunctionParameter": {
                  "Ref": "WarmUpPluginWarmerName1LambdaFunction"
                },
                "WarmUpPluginWarmerName2LambdaFunctionParameter": {
                  "Ref": "WarmUpPluginWarmerName2LambdaFunction"
                },
                "ColdLambdaFunctionParameter": {
                  "Ref": "ColdLambdaFunction"
                },
                "WarmLambdaFunctionParameter": {
                  "Ref": "WarmLambdaFunction"
                }
              },
              "TemplateURL": {
                "Fn::Join": [
                  "/",
                  [
                    "https://s3.ap-northeast-2.amazonaws.com",
                    {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "serverless/cylee-service/dev/1632410916583-2021-09-23T15:28:36.583Z",
                    "cloudformation-template-Versions-nested-stack.json"
                  ]
                ]
              }
            },
            "DependsOn": [
              "WarmUpPluginWarmerName1LambdaFunction",
              "WarmUpPluginWarmerName2LambdaFunction",
              "ColdLambdaFunction",
              "WarmLambdaFunction"
            ]
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-cylee-service-dev-ServerlessDeploymentBucketName"
            }
          },
          "WarmUpPluginWarmerName1LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.WarmUpPluginWarmerName1LambdaVersion3vHYBNTT6Z3jEdCu88nn8SA2aIy5qz75Lo7JRiwV9w"
              ]
            },
            "Export": {
              "Name": "sls-cylee-service-dev-WarmUpPluginWarmerName1LambdaFunctionQualifiedArn"
            }
          },
          "WarmUpPluginWarmerName2LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.WarmUpPluginWarmerName2LambdaVersionZnHTMp76gsQhZ5w9g6lEjW0ds4IHFmePH54UNMKMY"
              ]
            },
            "Export": {
              "Name": "sls-cylee-service-dev-WarmUpPluginWarmerName2LambdaFunctionQualifiedArn"
            }
          },
          "ColdLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.ColdLambdaVersionpRivTfKpkctNbMO97LI8uNadhOoRGHS5clWYQ7ag"
              ]
            },
            "Export": {
              "Name": "sls-cylee-service-dev-ColdLambdaFunctionQualifiedArn"
            }
          },
          "WarmLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.WarmLambdaVersionPcC4JKBcwzAgwpqUEfKIDfjDnJQvuXsreSUPIZjAJiU"
              ]
            },
            "Export": {
              "Name": "sls-cylee-service-dev-WarmLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Fn::GetAtt": [
                      "APINestedStack",
                      "Outputs.ApiGatewayRestApi"
                    ]
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-cylee-service-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "warmup": {
        "warmerName1": {
          "enabled": true,
          "events": [
            {
              "schedule": "rate(1 minute)"
            }
          ],
          "concurrency": 1,
          "package": {
            "individually": false
          }
        },
        "warmerName2": {
          "enabled": true,
          "events": [
            {
              "schedule": "rate(2 minutes)"
            }
          ],
          "concurrency": 2,
          "package": {
            "individually": false
          }
        }
      },
      "splitStacks": {
        "nestedStackCount": 20,
        "perFunction": false,
        "perType": true,
        "perGroupFunction": false
      }
    },
    "plugins": [
      "serverless-plugin-warmup",
      "serverless-plugin-split-stacks"
    ],
    "pluginsData": {},
    "functions": {
      "cold": {
        "handler": "./functions/coldFunctions/handler.cold",
        "name": "cylee-service-dev-cold",
        "events": [
          {
            "http": {
              "path": "cold",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "warmup": {
          "warmerName1": {
            "enabled": false
          },
          "warmerName2": {
            "enabled": false
          }
        },
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "ColdLambdaVersionpRivTfKpkctNbMO97LI8uNadhOoRGHS5clWYQ7ag"
      },
      "warm": {
        "handler": "./functions/warmFunctions/handler.warm",
        "name": "cylee-service-dev-warm",
        "events": [
          {
            "http": {
              "path": "warm",
              "method": "get",
              "integration": "AWS",
              "request": {
                "template": {
                  "application/json": "{ \"stageVariables\" : { \"SERVERLESS_ALIAS\" : \"dev\" } }"
                },
                "passThrough": "NEVER"
              },
              "response": {
                "statusCodes": {
                  "200": {
                    "pattern": ""
                  },
                  "400": {
                    "pattern": "[\\s\\S]*\\[400\\][\\s\\S]*"
                  },
                  "401": {
                    "pattern": "[\\s\\S]*\\[401\\][\\s\\S]*"
                  },
                  "403": {
                    "pattern": "[\\s\\S]*\\[403\\][\\s\\S]*"
                  },
                  "404": {
                    "pattern": "[\\s\\S]*\\[404\\][\\s\\S]*"
                  },
                  "422": {
                    "pattern": "[\\s\\S]*\\[422\\][\\s\\S]*"
                  },
                  "500": {
                    "pattern": "[\\s\\S]*(Process\\s?exited\\s?before\\s?completing\\s?request|\\[500\\])[\\s\\S]*"
                  },
                  "502": {
                    "pattern": "[\\s\\S]*\\[502\\][\\s\\S]*"
                  },
                  "504": {
                    "pattern": "([\\s\\S]*\\[504\\][\\s\\S]*)|(.*Task timed out after \\d+\\.\\d+ seconds$)"
                  }
                }
              }
            }
          }
        ],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "WarmLambdaVersionPcC4JKBcwzAgwpqUEfKIDfjDnJQvuXsreSUPIZjAJiU"
      },
      "warmUpPluginWarmerName1": {
        "description": "Serverless WarmUp Plugin (warmer \"warmerName1\")",
        "events": {
          "$ref": "$[\"service\"][\"custom\"][\"warmup\"][\"warmerName1\"][\"events\"]"
        },
        "handler": ".warmup/warmerName1/index.warmUp",
        "memorySize": 128,
        "name": "cylee-service-dev-warmup-plugin-warmerName1",
        "runtime": "nodejs14.x",
        "package": {
          "individually": false,
          "exclude": [
            "**"
          ],
          "include": [
            ".warmup\\warmerName1\\**"
          ]
        },
        "timeout": 10,
        "role": "WarmUpPluginWarmerName1Role",
        "memory": 128,
        "vpc": {},
        "versionLogicalId": "WarmUpPluginWarmerName1LambdaVersion3vHYBNTT6Z3jEdCu88nn8SA2aIy5qz75Lo7JRiwV9w"
      },
      "warmUpPluginWarmerName2": {
        "description": "Serverless WarmUp Plugin (warmer \"warmerName2\")",
        "events": {
          "$ref": "$[\"service\"][\"custom\"][\"warmup\"][\"warmerName2\"][\"events\"]"
        },
        "handler": ".warmup/warmerName2/index.warmUp",
        "memorySize": 128,
        "name": "cylee-service-dev-warmup-plugin-warmerName2",
        "runtime": "nodejs14.x",
        "package": {
          "individually": false,
          "exclude": [
            "**"
          ],
          "include": [
            ".warmup\\warmerName2\\**"
          ]
        },
        "timeout": 10,
        "role": "WarmUpPluginWarmerName2Role",
        "memory": 128,
        "vpc": {},
        "versionLogicalId": "WarmUpPluginWarmerName2LambdaVersionZnHTMp76gsQhZ5w9g6lEjW0ds4IHFmePH54UNMKMY"
      }
    },
    "resources": {
      "Resources": {
        "WarmUpPluginWarmerName1Role": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "cylee-service",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "warmername1",
                  "role"
                ]
              ]
            },
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "cylee-service",
                      "dev",
                      "warmer",
                      "warmername1",
                      "policy"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cylee-service-dev-warmup-plugin-warmerName1:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cylee-service-dev-warmup-plugin-warmerName1:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "lambda:InvokeFunction"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:cylee-service-dev-warm"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "ec2:CreateNetworkInterface",
                        "ec2:DescribeNetworkInterfaces",
                        "ec2:DetachNetworkInterface",
                        "ec2:DeleteNetworkInterface"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              }
            ]
          }
        },
        "WarmUpPluginWarmerName2Role": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "cylee-service",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "warmername2",
                  "role"
                ]
              ]
            },
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "cylee-service",
                      "dev",
                      "warmer",
                      "warmername2",
                      "policy"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cylee-service-dev-warmup-plugin-warmerName2:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cylee-service-dev-warmup-plugin-warmerName2:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "lambda:InvokeFunction"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:cylee-service-dev-warm"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "ec2:CreateNetworkInterface",
                        "ec2:DescribeNetworkInterfaces",
                        "ec2:DetachNetworkInterface",
                        "ec2:DeleteNetworkInterface"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\cylee\\Desktop\\SLS\\.serverless\\cylee-service.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/cylee-service/dev/1632410916583-2021-09-23T15:28:36.583Z",
    "artifact": "cylee-service.zip"
  }
}