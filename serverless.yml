service: cylee-service

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
#frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: ap-northeast-2
  role: arn:aws:iam::230175665354:role/serverless-dev-ap-northeast-2-lambdaRole

functions:
  cold:
    handler: entry/slsWarmer.coldHandler
    name: ${self:service}-${self:provider.stage}-cold
    events:
      - http:
          path: cold
          method: get
  warm:
    handler: entry/slsWarmer.warmHandler
    name: ${self:service}-${self:provider.stage}-warm
    events:
      - http:
          path: warm
          method: get

  query:
    handler: entry/slsWarmer.warmHandler
    name: ${self:service}-${self:provider.stage}-warm
    events:
      - http:
          path: warm/{fakeId}
          method: get
          responses:
            200:
              description: 'successful API Response'
              bodyType: 'Flight'

  fakePost:
    handler: entry/slsWarmer.warmHandler
    name: ${self:service}-${self:provider.stage}-warm
    events:
      - http:
          path: warm
          method: post
          bodyType: 'PostFlightBody'
          responses:
            200:
              description: 'successful API Response'
              bodyType: 'Flight'

custom:
  autoswagger:
    apiType: http
    typefiles: ['./types/api-types.d.ts', './types/signup/signup-api-types.d.ts']
    basePath: /${self:provider.stage}
#    useStage: true
#    apiKeyHeaders: ['Authorization', 'x-api-key']
#  warmup:
#    officeWarmer:
#      enabled: true
#      role: arn:aws:iam::230175665354:role/only-warm-lambda-execution-role
#      events:
#        - schedule: rate(1 minute)
#      concurrency: 1
#      package:
#        individually: false
#    outOfOfficeWarmer:
#      enabled: true
#      role: arn:aws:iam::230175665354:role/only-warm-lambda-execution-role
#      events:
#        - schedule: rate(2 minutes)
#      concurrency: 2
#      package:
#        individually: false
#  splitStacks:
#    nestedStackCount: 5 # Controls the number of created nested stacks
#    perFunction: false
#    perType: true
#    perGroupFunction: false
#  serverless-offline:
#    noPrependStageInUrl: true

plugins:
  - serverless-auto-swagger
#  - serverless-plugin-warmup
#  - serverless-plugin-split-stacks
  - serverless-offline


